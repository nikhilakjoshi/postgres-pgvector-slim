"""Add query cache system with embeddings and view

Revision ID: e9bff2594aa9
Revises: fcea779b99a8
Create Date: 2025-09-15 14:20:00.000000

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "e9bff2594aa9"
down_revision: Union[str, None] = "fcea779b99a8"  # Set this to your latest migration ID
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Create query cache configuration table
    op.create_table(
        "query_cache_config",
        sa.Column("key", sa.String(length=50), nullable=False),
        sa.Column("value", sa.Text(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("created_by", sa.String(length=50), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), nullable=False),
        sa.Column("updated_by", sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint("key"),
        schema="askwealth",
    )

    # Create query cache embeddings table
    op.create_table(
        "query_cache_embeddings",
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column("user_message_id", postgresql.UUID(), nullable=False),
        sa.Column("assistant_message_id", postgresql.UUID(), nullable=False),
        sa.Column("rephrased_query", sa.Text(), nullable=False),
        sa.Column(
            "rephrased_query_embedding", postgresql.ARRAY(sa.Float()), nullable=True
        ),
        sa.Column("cache_hits", sa.Integer(), nullable=False),
        sa.Column("last_accessed", sa.TIMESTAMP(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assistant_message_id"],
            ["askwealth.message.message_id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_message_id"], ["askwealth.message.message_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_message_id", "assistant_message_id"),
        schema="askwealth",
    )

    # Create indexes
    op.create_index(
        "idx_query_cache_embeddings_user_msg",
        "query_cache_embeddings",
        ["user_message_id"],
        schema="askwealth",
    )
    op.create_index(
        "idx_query_cache_embeddings_hits",
        "query_cache_embeddings",
        ["cache_hits"],
        schema="askwealth",
    )

    # Insert default configuration values
    op.execute(
        """
        INSERT INTO askwealth.query_cache_config (key, value, created_at, created_by, updated_at, updated_by) VALUES 
            ('similarity_threshold', '0.85', CURRENT_TIMESTAMP, 'migration', CURRENT_TIMESTAMP, 'migration'),
            ('cache_enabled', 'true', CURRENT_TIMESTAMP, 'migration', CURRENT_TIMESTAMP, 'migration'),
            ('max_cache_entries', '5000', CURRENT_TIMESTAMP, 'migration', CURRENT_TIMESTAMP, 'migration')
    """
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop indexes
    op.drop_index(
        "idx_query_cache_embeddings_hits",
        table_name="query_cache_embeddings",
        schema="askwealth",
    )
    op.drop_index(
        "idx_query_cache_embeddings_user_msg",
        table_name="query_cache_embeddings",
        schema="askwealth",
    )

    # Drop tables
    op.drop_table("query_cache_embeddings", schema="askwealth")
    op.drop_table("query_cache_config", schema="askwealth")

    # ### end Alembic commands ###
